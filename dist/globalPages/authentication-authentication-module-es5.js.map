{"version":3,"sources":["webpack:///./src/app/authentication/forget-password/forget-password.component.html","webpack:///./src/app/authentication/log-in/log-in.component.html","webpack:///./src/app/authentication/reset/reset.component.html","webpack:///./src/app/authentication/sign-up/sign-up.component.html","webpack:///./src/app/authentication/authentication.module.ts","webpack:///./src/app/authentication/forget-password/forget-password.component.css","webpack:///./src/app/authentication/forget-password/forget-password.component.ts","webpack:///./src/app/authentication/log-in/log-in.component.css","webpack:///./src/app/authentication/log-in/log-in.component.ts","webpack:///./src/app/authentication/reset/reset.component.css","webpack:///./src/app/authentication/reset/reset.component.ts","webpack:///./src/app/authentication/sign-up/sign-up.component.css","webpack:///./src/app/authentication/sign-up/sign-up.component.ts","webpack:///./src/app/shared/passwordMatcher/password-matcher.ts"],"names":[],"mappings":"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","file":"authentication-authentication-module-es5.js","sourcesContent":["module.exports = \"<section class=\\\"flat-row flat-login parallax1\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-12 col-sm-12\\\">\\r\\n        <div class=\\\"forget-form\\\">\\r\\n          <h3>{{'restorePassword' | translate}}</h3>\\r\\n          <form novalidate (submit)=\\\"submit(form.value)\\\" #form=\\\"ngForm\\\" accept-charset=\\\"utf-8\\\">\\r\\n            <div class=\\\"wrap-signup\\\">\\r\\n              <label>{{'email' | translate}}</label>\\r\\n              <input type=\\\"text\\\" class=\\\"email\\\" name=\\\"email\\\" ngModel #email=\\\"ngModel\\\" email required>\\r\\n            </div>\\r\\n            <app-form-validation-message [control]=\\\"email\\\" [messages]=\\\"{required:'emailIsRequired',email:'notAValidEmail'}\\\">\\r\\n            </app-form-validation-message>\\r\\n            <button type=\\\"submit\\\">\\r\\n              <div class=\\\"btn-more\\\">\\r\\n                <a title=\\\"\\\">{{'sendVerificationCode' | translate}}</a>\\r\\n              </div>\\r\\n            </button>\\r\\n          </form><!-- /form -->\\r\\n          <div *ngIf=\\\"verificationCode\\\" class=\\\"alert alert-info\\\" style=\\\"margin-top:50px\\\">\\r\\n            {{\\\"checkYourEmailForLink\\\"|translate}}\\r\\n          </div>\\r\\n        </div><!-- /.login-form -->\\r\\n      </div><!-- /.col-lg-4 -->\\r\\n\\r\\n    </div><!-- /.row -->\\r\\n  </div><!-- /.container -->\\r\\n  <div class=\\\"overlay1\\\"></div>\\r\\n</section><!-- /.flat-login -->\\r\\n\"","module.exports = \"<section class=\\\"flat-row flat-login parallax1\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-12 col-sm-12\\\">\\r\\n        <div class=\\\"login-form\\\">\\r\\n          <h3>{{'login' | translate}}</h3>\\r\\n          <form novalidate (submit)=\\\"submit(form)\\\" #form=\\\"ngForm\\\" accept-charset=\\\"utf-8\\\">\\r\\n            <div class=\\\"wrap-login\\\">\\r\\n              <label>{{'username' | translate}}</label>\\r\\n              <input type=\\\"text\\\" class=\\\"username\\\" name=\\\"email\\\" ngModel #username=\\\"ngModel\\\" required>\\r\\n            </div>\\r\\n            <app-form-validation-message [control]=\\\"username\\\" [messages]=\\\"{'required':'usernameIsRequired'}\\\">\\r\\n            </app-form-validation-message>\\r\\n            <div class=\\\"wrap-login\\\">\\r\\n              <label>{{'password' | translate}}</label>\\r\\n              <input type=\\\"password\\\" class=\\\"password\\\" name=\\\"password\\\" ngModel required #password=\\\"ngModel\\\">\\r\\n            </div>\\r\\n            <app-form-validation-message [control]=\\\"password\\\" [messages]=\\\"{'required':'passwordIsRequired'}\\\">\\r\\n            </app-form-validation-message>\\r\\n            <div class=\\\"wrap-login remember\\\">\\r\\n              <div class=\\\"checkbox\\\">\\r\\n                <label>\\r\\n                  <input type=\\\"checkbox\\\">{{'rememberMe' | translate}}\\r\\n                </label>\\r\\n              </div>\\r\\n              <a [routerLink]=\\\"'/auth/forget'\\\" class=\\\"forgot\\\" title=\\\"\\\">{{'forgetPassword' | translate}}</a>\\r\\n\\r\\n              <a [routerLink]=\\\"'/auth/signup'\\\" class=\\\"forgot\\\" title=\\\"\\\">{{'createAccount' | translate}}&nbsp; &nbsp; &nbsp;</a>\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\" [disabled]=\\\"form.invalid && form.submitted\\\">\\r\\n              <div class=\\\"btn-more\\\" >\\r\\n                <a title=\\\"\\\" >{{'login' | translate}}</a>\\r\\n              </div>\\r\\n            </button>\\r\\n          </form><!-- /form -->\\r\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"message\\\" style=\\\"margin-top: 20px\\\"> {{message | translate}}</div>\\r\\n        </div><!-- /.login-form -->\\r\\n      </div><!-- /.col-lg-4 -->\\r\\n\\r\\n    </div><!-- /.row -->\\r\\n  </div><!-- /.container -->\\r\\n  <div class=\\\"overlay1\\\"></div>\\r\\n</section><!-- /.flat-login -->\\r\\n\"","module.exports = \"<section class=\\\"flat-row flat-login parallax1\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-12 col-sm-12\\\">\\r\\n        <div class=\\\"reset-form\\\">\\r\\n          <h3>{{ 'enterCodeAndNewPassword' | translate}}</h3>\\r\\n          <form novalidate (submit)=\\\"submit(form.value)\\\" #form=\\\"ngForm\\\" accept-charset=\\\"utf-8\\\">\\r\\n            <div class=\\\"wrap-reset\\\">\\r\\n              <label>{{ 'verificationCode' | translate}}</label>\\r\\n              <input type=\\\"text\\\" class=\\\"username\\\" name=\\\"username\\\" ngModel #verificationCode=\\\"ngModel\\\" required>\\r\\n            </div>\\r\\n            <app-form-validation-message [control]=\\\"verificationCode\\\" [messages]=\\\"{required:'verificationCodeIsRequired'}\\\">\\r\\n            </app-form-validation-message>\\r\\n            <div class=\\\"wrap-reset\\\">\\r\\n              <label>{{'newPassword' | translate}}</label>\\r\\n              <input type=\\\"password\\\" class=\\\"password\\\" name=\\\"password\\\" ngModel #password=\\\"ngModel\\\" required>\\r\\n            </div>\\r\\n            <app-form-validation-message [control]=\\\"password\\\" [messages]=\\\"{required:'passwordIsRequired'}\\\">\\r\\n\\r\\n            </app-form-validation-message>\\r\\n            <div class=\\\"wrap-reset\\\">\\r\\n              <label>{{'confirmNewPassword' | translate}}</label>\\r\\n              <input type=\\\"password\\\" class=\\\"password\\\" name=\\\"repassword\\\" ngModel #repassword=\\\"ngModel\\\" required>\\r\\n            </div>\\r\\n            <app-form-validation-message [control]=\\\"form\\\" [messages]=\\\"{passwordMatcher:'confirmPasswordAndPasswordNotSame'}\\\">\\r\\n            </app-form-validation-message>\\r\\n            <app-form-validation-message [control]=\\\"repassword\\\" [messages]=\\\"{required:'confirmPasswordIsRequired'}\\\">\\r\\n            </app-form-validation-message>\\r\\n            <button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\">\\r\\n              <div class=\\\"btn-more\\\">\\r\\n                <a title=\\\"\\\">{{ 'changePassword' | translate}}</a>\\r\\n              </div>\\r\\n            </button>\\r\\n          </form><!-- /form -->\\r\\n        </div><!-- /.login-form -->\\r\\n      </div><!-- /.col-lg-4 -->\\r\\n\\r\\n    </div><!-- /.row -->\\r\\n  </div><!-- /.container -->\\r\\n  <div class=\\\"overlay1\\\"></div>\\r\\n</section><!-- /.flat-login -->\\r\\n\"","module.exports = \"<section class=\\\"flat-row flat-login parallax1\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-12 col-sm-12\\\">\\r\\n\\r\\n        <div class=\\\"signup-form\\\">\\r\\n          <h3>{{'createAccount' | translate}} </h3>\\r\\n          <form  novalidate (submit)=\\\"submit(form.value)\\\" #form=\\\"ngForm\\\" accept-charset=\\\"utf-8\\\" class=\\\"row\\\">\\r\\n            <div class=\\\"wrap-signup col-lg-6 col-sm-12\\\">\\r\\n              <label>{{'username' | translate}}</label>\\r\\n              <input type=\\\"text\\\" class=\\\"username\\\" name=\\\"username\\\" ngModel #username=\\\"ngModel\\\"  required>\\r\\n              <app-form-validation-message [control]=\\\"username\\\" [messages]=\\\"{required:'usernameIsRequired'}\\\">\\r\\n              </app-form-validation-message>\\r\\n            </div>\\r\\n            <div class=\\\"wrap-signup col-lg-6 col-sm-12\\\">\\r\\n              <label>{{'email' | translate}}</label>\\r\\n              <input type=\\\"text\\\" class=\\\"email\\\" name=\\\"email\\\" ngModel #email=\\\"ngModel\\\" email required>\\r\\n              <app-form-validation-message [control]=\\\"email\\\" [messages]=\\\"{required:'usernameIsRequired',email:'notAValidEmail'}\\\">\\r\\n              </app-form-validation-message>\\r\\n            </div>\\r\\n            <div class=\\\"wrap-signup col-lg-6 col-sm-12\\\">\\r\\n              <label>{{'password' | translate}}</label>\\r\\n              <input type=\\\"password\\\" class=\\\"password\\\" name=\\\"password\\\" ngModel #password=\\\"ngModel\\\" required>\\r\\n              <app-form-validation-message [control]=\\\"password\\\" [messages]=\\\"{required:'passwordIsRequired'}\\\">\\r\\n\\r\\n              </app-form-validation-message>\\r\\n            </div>\\r\\n            <!--<div class=\\\"wrap-signup col-lg-6 col-sm-12\\\">-->\\r\\n              <!--<label>{{'confirmPassword' | translate}}</label>-->\\r\\n              <!--<input type=\\\"password\\\" class=\\\"password\\\" name=\\\"repassword\\\" ngModel #repassword=\\\"ngModel\\\" required>-->\\r\\n            <!--</div>-->\\r\\n            <!--<app-form-validation-message [control]=\\\"form\\\" [messages]=\\\"{passwordMatcher:'confirmPasswordAndPasswordNotSame'}\\\">-->\\r\\n            <!--</app-form-validation-message>-->\\r\\n            <!--<app-form-validation-message [control]=\\\"repassword\\\" [messages]=\\\"{required:'confirmPasswordIsRequired'}\\\">-->\\r\\n            <!--</app-form-validation-message>-->\\r\\n            <div class=\\\"wrap-signup col-lg-6 col-sm-12 phone\\\">\\r\\n              <label>{{'phoneNumber' | translate}}</label>\\r\\n              <input type=\\\"text\\\" class=\\\"phoneNumber\\\" name=\\\"phoneNumber\\\" ngModel #phoneNumber=\\\"ngModel\\\" required>\\r\\n              <app-form-validation-message [control]=\\\"phoneNumber\\\" [messages]=\\\"{required:'phoneNumberIsRequired'}\\\">\\r\\n              </app-form-validation-message>\\r\\n            </div>\\r\\n            <!--<div class=\\\"wrap-signup col-lg-6 col-sm-12 category\\\">-->\\r\\n              <!--<label>{{'gender' | translate}}</label>-->\\r\\n              <!--<span class=\\\"ti-angle-down\\\"></span>-->\\r\\n              <!--<select name=\\\"gender\\\" ngModel #gender=\\\"ngModel\\\" required>-->\\r\\n                <!--<option value=\\\"male\\\">{{'male' | translate}} </option>-->\\r\\n                <!--<option value=\\\"female\\\">{{'female' | translate}}</option>-->\\r\\n              <!--</select>-->\\r\\n              <!--<app-form-validation-message [control]=\\\"gender\\\" [messages]=\\\"{required:'genderIsRequired'}\\\">-->\\r\\n              <!--</app-form-validation-message>-->\\r\\n            <!--</div>-->\\r\\n            <!--<div class=\\\"wrap-signup col-lg-6 col-sm-12\\\">-->\\r\\n              <!--<label>{{'birth' | translate}}</label>-->\\r\\n              <!--<input type=\\\"date\\\"  name=\\\"birthDate\\\" ngModel #birth=\\\"ngModel\\\" required>-->\\r\\n              <!--<app-form-validation-message [control]=\\\"birth\\\" [messages]=\\\"{required:'birthIsRequired'}\\\">-->\\r\\n              <!--</app-form-validation-message>-->\\r\\n            <!--</div>-->\\r\\n            <button type=\\\"submit\\\" [disabled]=\\\"form.invalid && form.submitted\\\">\\r\\n              <div class=\\\"btn-more\\\">\\r\\n                <a title=\\\"\\\">{{'createAccount' | translate}}</a>\\r\\n              </div>\\r\\n            </button>\\r\\n          </form><!-- /form -->\\r\\n        </div><!-- /.login-form -->\\r\\n      </div><!-- /.col-lg-4 -->\\r\\n\\r\\n    </div><!-- /.row -->\\r\\n  </div><!-- /.container -->\\r\\n  <div class=\\\"overlay1\\\"></div>\\r\\n</section><!-- /.flat-login -->\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LogInComponent } from './log-in/log-in.component';\r\nimport {Route, RouterModule} from '@angular/router';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { ResetComponent } from './reset/reset.component';\r\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\r\nimport {TranslateModule} from '@ngx-translate/core';\r\nimport {FormValidationMessageComponent} from '../shared/form-validation-message/form-validation-message.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\nconst route:Route[] =[\r\n  {path:'',component:LogInComponent},\r\n  {path:'login',component:LogInComponent},\r\n  {path:'signup',component:SignUpComponent},\r\n  {path:'reset',component:ResetComponent},\r\n  {path:'forget',component:ForgetPasswordComponent},\r\n]\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(route),\r\n    TranslateModule.forChild(),\r\n    SharedModule\r\n  ],\r\n  declarations: [LogInComponent, SignUpComponent, ResetComponent, ForgetPasswordComponent,]\r\n})\r\nexport class AuthenticationModule { }\r\n","module.exports = \"button{\\r\\n  display: contents;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aGVudGljYXRpb24vZm9yZ2V0LXBhc3N3b3JkL2ZvcmdldC1wYXNzd29yZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvYXV0aGVudGljYXRpb24vZm9yZ2V0LXBhc3N3b3JkL2ZvcmdldC1wYXNzd29yZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYnV0dG9ue1xyXG4gIGRpc3BsYXk6IGNvbnRlbnRzO1xyXG59XHJcbiJdfQ== */\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-forget-password',\r\n  templateUrl: './forget-password.component.html',\r\n  styleUrls: ['./forget-password.component.css']\r\n})\r\nexport class ForgetPasswordComponent implements OnInit {\r\n\r\n  constructor(private http:HttpClient) { }\r\n  @ViewChild('form',{static:false}) form\r\n  verificationCode=false\r\n  ngOnInit() {\r\n  }\r\n  submit(data)\r\n  {\r\n    if(this.form.valid)\r\n      this.http.post(environment.api+'users/forgotPassword',data).toPromise().then((data)=>{\r\n        this.verificationCode=true;\r\n      })\r\n  }\r\n\r\n}\r\n","module.exports = \"button{\\r\\n  display: contents;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aGVudGljYXRpb24vbG9nLWluL2xvZy1pbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvYXV0aGVudGljYXRpb24vbG9nLWluL2xvZy1pbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYnV0dG9ue1xyXG4gIGRpc3BsYXk6IGNvbnRlbnRzO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormGroup} from '@angular/forms';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../../../environments/environment';\r\nimport {Router} from '@angular/router';\r\nimport {AuthService} from '../auth.service';\r\nimport {format} from \"date-fns\";\r\n\r\n@Component({\r\n  selector: 'app-log-in',\r\n  templateUrl: './log-in.component.html',\r\n  styleUrls: ['./log-in.component.css']\r\n})\r\nexport class LogInComponent implements OnInit {\r\n\r\n  message\r\n  constructor(private http:HttpClient,private router:Router,private auth:AuthService) { }\r\n  ngOnInit() {\r\n  }\r\n  submit(form)\r\n  {\r\n    this.message=null\r\n    if(form.invalid)\r\n      return\r\n    let data=form.value\r\n    this.http.post(environment.api+'users/login',data).subscribe((data)=>{\r\n      localStorage.setItem(environment.userDetails,JSON.stringify(data));\r\n      this.auth.logIn(data);\r\n      this.router.navigate(['']);\r\n    },error => {\r\n      // console.log(error)\r\n      // if(error['error']['error']['statusCode']==401)\r\n      {\r\n        this.message=error['error']['error']['code']\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \"button{\\r\\n  display: contents;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aGVudGljYXRpb24vcmVzZXQvcmVzZXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpY2F0aW9uL3Jlc2V0L3Jlc2V0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b257XHJcbiAgZGlzcGxheTogY29udGVudHM7XHJcbn1cclxuIl19 */\"","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {passwordMatcher} from '../../shared/passwordMatcher/password-matcher';\r\nimport {environment} from '../../../environments/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-reset',\r\n  templateUrl: './reset.component.html',\r\n  styleUrls: ['./reset.component.css']\r\n})\r\nexport class ResetComponent implements OnInit,AfterViewInit {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  @ViewChild('form',{static:false}) form\r\n  ngAfterViewInit() {\r\n    console.log(this.form)\r\n    this.form.form.setValidators(passwordMatcher('password','repassword'))\r\n\r\n  }\r\n  submit(data)\r\n  {\r\n    if(this.form.valid)\r\n      this.http.post(environment.api+'users/resetPassword',data).toPromise().then((data)=>{\r\n\r\n      })\r\n  }\r\n\r\n}\r\n","module.exports = \"button{\\r\\n  display: contents;\\r\\n}\\r\\noption\\r\\n{\\r\\n  color:black;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aGVudGljYXRpb24vc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUI7QUFDbkI7QUFDQTs7RUFFRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9hdXRoZW50aWNhdGlvbi9zaWduLXVwL3NpZ24tdXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbntcclxuICBkaXNwbGF5OiBjb250ZW50cztcclxufVxyXG5vcHRpb25cclxue1xyXG4gIGNvbG9yOmJsYWNrO1xyXG59XHJcbiJdfQ== */\"","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../../../environments/environment';\r\nimport {FormGroup} from '@angular/forms';\r\nimport {passwordMatcher} from '../../shared/passwordMatcher/password-matcher';\r\nimport {Router} from '@angular/router';\r\nimport {AuthService} from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit,AfterViewInit {\r\n\r\n  constructor(private http:HttpClient,private router:Router,private auth:AuthService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  @ViewChild('form',{static:false}) form\r\n  ngAfterViewInit() {\r\n    // this.form.form.setValidators(passwordMatcher('password','repassword'))\r\n\r\n  }\r\n  submit(data)\r\n  {\r\n    delete data['repassword']\r\n    if(!this.form.invalid){\r\n      this.http.post(environment.api+'users',data).toPromise().then((data1)=>{\r\n        this.http.post(environment.api+'users/login',{email:data[\"email\"],password:data[\"password\"]}).toPromise().then((data2)=>{\r\n          // localStorage.setItem(environment.userDetails,JSON.stringify(data2));\r\n          this.auth.logIn(data2);\r\n          this.router.navigate(['profile'],{fragment:'chooseCategory'});\r\n        })\r\n        // this.router.navigate(['auth/login'])\r\n      })\r\n    }\r\n\r\n  }\r\n}\r\n","import {AbstractControl, ValidationErrors} from '@angular/forms';\r\n\r\nexport function passwordMatcher(first,second) {\r\n  return (control: AbstractControl): ValidationErrors | null =>{\r\n    if(first && second)\r\n    {\r\n      var f=control.get(first)\r\n      var s=control.get(second)\r\n      if(f&&s&&f.value&&s.value&&f.value!=s.value)\r\n      {\r\n        return{\r\n          passwordMatcher:true\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}